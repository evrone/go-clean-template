version: 2.1

parameters:
  service_name:
    type: string
    default: "go-service-template"
  image:
    type: string
    default: "evrone/go-service-template"

orbs:
  docker: circleci/docker@0.5.20

executors:
  default:
    docker:
      - image: circleci/golang:1.15
#  with-services:
#    docker:
#      - image: circleci/golang:1.15
#      - image: circleci/postgres:11-alpine
#        environment:
#          POSTGRES_USER: postgres
#          POSTGRES_DB: template_test
#          POSTGRES_PASSWORD: ''

aliases:
  - &restore-mod-cache
    keys:
      - go-modules-v1-{{ checksum "go.sum" }}

  - &save-mod-cache
    key: go-modules-v1-{{ checksum "go.sum" }}
    paths:
      - "/go/pkg/mod"

jobs:
  linters:
    executor:
      name: default
    steps:
      - checkout
      - run:
          name: Install tools
          command: |
            .circleci/bin/install.sh
      - run:
          name: Setup PATH for working without a relative path
          command: echo "export PATH=$PATH:/home/circleci/project/bin" >> $BASH_ENV
      - run:
          name: Run dotenv > Reviewdog
          command: .circleci/bin/reviewdog_dotenv.sh
      - run:
          name: Run hadolint > Reviewdog
          command: .circleci/bin/reviewdog_hadolint.sh
      - run:
          name: Run golangci-lint > Reviewdog
          command: .circleci/bin/reviewdog_golangci-lint.sh
      - run:
          name: Run dotenv
          command: dotenv-linter
      - run:
          name: Run hadolint
          command: git ls-files --exclude='Dockerfile*' --ignored | xargs hadolint
      - run:
          name: Run golangci-lint
          command: golangci-lint run


  integration-tests:
    executor:
      name: default
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Run docker-compose
          command: docker-compose up --build -d
      - run:
          name: Run logs
          command: docker logs integration

  tests:
    executor:
      name: default
    steps:
      - checkout
      - restore_cache: *restore-mod-cache
      # Wait for database
#      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      # APP DB init
      - run:
          name: Tests
          command: go test -v -race ./internal/...
      - save_cache: *save-mod-cache

workflows:
  ci:
    jobs:
      - linters
      - tests
      - integration-tests
      # # Build staging image
      # - docker/publish:
      #     context: evrone-erp
      #     image: << pipeline.parameters.image >>
      #     tag: "staging-${CIRCLE_SHA1}"
      #     requires:
      #       - linters
      #       - tests
      #     filters:
      #       branches:
      #         only:
      #           - develop
      # # Build QA image
      # - docker/publish:
      #     context: evrone-erp
      #     image: << pipeline.parameters.image >>
      #     tag: "qa-${CIRCLE_SHA1}"
      #     requires:
      #       - linters
      #       - tests
      #     filters:
      #       branches:
      #         only:
      #           - master
      #           - /release\/v\d.*/
      # # Build production image
      # - docker/publish:
      #     context: evrone-erp
      #     image: << pipeline.parameters.image >>
      #     tag: "$CIRCLE_TAG"
      #     filters:
      #       tags:
      #         only: /^v.*/
      #       branches:
      #         ignore: /.*/
