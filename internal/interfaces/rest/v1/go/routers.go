/*
 * Go Clean Template API
 *
 * Using a translation service as an example
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"github.com/prometheus/client_golang/prometheus/promhttp"
	"net/http"

	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method string
	// Pattern is the pattern of the URI.
	Pattern string
	// HandlerFunc is the handler function of this route.
	HandlerFunc gin.HandlerFunc
}

// Routes is the list of the generated Route.
type Routes []Route

// NewRouter returns a new router.
func NewRouter(apiTranslator *Translator) *gin.Engine {
	router := gin.Default()
	for _, route := range getRoutes(apiTranslator) {
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodPatch:
			router.PATCH(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	setupMonitoringRoutes(router)

	return router
}

func setupMonitoringRoutes(handler *gin.Engine) {
	// Options
	handler.Use(gin.Logger())
	handler.Use(gin.Recovery())

	// K8s probe
	handler.GET("/healthz", func(c *gin.Context) { c.Status(http.StatusOK) })

	// Prometheus metrics
	handler.GET("/metrics", gin.WrapH(promhttp.Handler()))
}

// Index is the index handler.
func Index(c *gin.Context) {
	c.String(http.StatusOK, "Hello World!")
}

func getRoutes(apiTranslator *Translator) Routes {
	var routes = Routes{
		{
			"Index",
			http.MethodGet,
			"/v1/",
			Index,
		},

		{
			"DoTranslate",
			http.MethodPost,
			"/v1/translation/do-translate",
			apiTranslator.DoTranslate,
		},

		{
			"History",
			http.MethodGet,
			"/v1/translation/history",
			apiTranslator.History,
		},
	}
	return routes
}
