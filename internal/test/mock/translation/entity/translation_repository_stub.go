// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/domain/translation/entity/translation_repository.go

// Package service_test is a generated GoMock package.
package service_test

import (
	context "context"
	reflect "reflect"

	entity "github.com/evrone/go-clean-template/internal/domain/translation/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockTranslationRepository is a mock of TranslationRepository interface.
type MockTranslationRepository struct {
	ctrl     *gomock.Controller
	recorder *MockTranslationRepositoryMockRecorder
}

// MockTranslationRepositoryMockRecorder is the mock recorder for MockTranslationRepository.
type MockTranslationRepositoryMockRecorder struct {
	mock *MockTranslationRepository
}

// NewMockTranslationRepository creates a new mock instance.
func NewMockTranslationRepository(ctrl *gomock.Controller) *MockTranslationRepository {
	mock := &MockTranslationRepository{ctrl: ctrl}
	mock.recorder = &MockTranslationRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTranslationRepository) EXPECT() *MockTranslationRepositoryMockRecorder {
	return m.recorder
}

// GetHistory mocks base method.
func (m *MockTranslationRepository) GetHistory(arg0 context.Context) ([]entity.Translation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHistory", arg0)
	ret0, _ := ret[0].([]entity.Translation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetHistory indicates an expected call of GetHistory.
func (mr *MockTranslationRepositoryMockRecorder) GetHistory(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHistory", reflect.TypeOf((*MockTranslationRepository)(nil).GetHistory), arg0)
}

// Store mocks base method.
func (m *MockTranslationRepository) Store(arg0 context.Context, arg1 entity.Translation) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Store", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Store indicates an expected call of Store.
func (mr *MockTranslationRepositoryMockRecorder) Store(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Store", reflect.TypeOf((*MockTranslationRepository)(nil).Store), arg0, arg1)
}
